# https://github.com/wills106/homeassistant-config/blob/master/packages/solax_x1ac.yaml
#
# Reduced Registers for the X1-AC
#

modbus:
  name: SolaX
#  type: tcp # Comment out for RS485
#  host: !secret inverter_ip # Comment out for RS485
#  port: 502 # Comment out for RS485

# Uncomment for USB - RS485 dongle
  type: serial
  method: rtu
  port: /dev/ttyUSB0
  baudrate: 115200
  stopbits: 1
  bytesize: 8
  parity: N

sensor:
- platform: modbus
  scan_interval: 5
  registers:
    - name: SolaX Inverter Voltage
      hub: SolaX
      unit_of_measurement: V
      register: 0
      register_type: input
      scale: 0.1
      precision: 1
    - name: SolaX Inverter Current
      hub: SolaX
      unit_of_measurement: A
      register: 1
      register_type: input
      scale: 0.1
      precision: 1
    - name: Solax Inverter Power
      hub: SolaX
      unit_of_measurement: W
      register: 2
      register_type: input
    - name: SolaX Inverter Frequency
      hub: SolaX
      unit_of_measurement: Hz
      register: 7
      register_type: input
      scale: 0.01
      precision: 2
    - name: SolaX Inner Temp
      hub: SolaX
      unit_of_measurement: 째C
      register: 8
      register_type: input
    - name: SolaX Run Mode
      hub: SolaX
      register: 9
      register_type: input
    - name: Solax Battery Voltage
      hub: SolaX
      unit_of_measurement: V
      register: 20
      register_type: input
      scale: 0.1
      precision: 1
# Minus Number Discharging, Positive Number Charging
    - name: Solax Battery Current
      hub: SolaX
      unit_of_measurement: A
      register: 21
      register_type: input
      scale: 0.1
      precision: 1
# Minus Number Discharging, Positive Number Charging
    - name: Solax Battery Power
      hub: SolaX
      unit_of_measurement: W
      register: 22
      register_type: input
    - name: Solax Charger Board Temperature
      hub: SolaX
      unit_of_measurement: 째C
      register: 23
      register_type: input
    - name: Solax Charger Battery Temperature
      hub: SolaX
      unit_of_measurement: 째C
      register: 24
      register_type: input
    - name: Solax Charger Boost Temperature
      hub: SolaX
      unit_of_measurement: 째C
      register: 25
      register_type: input
    - name: Solax Battery Capacity
      hub: SolaX
      unit_of_measurement: "%"
      register: 28
      register_type: input
# Negative pulling from Grid, Positive exportng to the Grid
    - name: SolaX Measured Power
      hub: SolaX
      unit_of_measurement: W
      register: 70
      register_type: input
# Generated Solar and Energy used from battery
    - name: SolaX Energy Today
      hub: SolaX
      unit_of_measurement: kWh
      register: 80
      register_type: input
      scale: 0.1
      precision: 1

- platform: template
  sensors:
    solax_run_mode_template:
      friendly_name: "SolaX Run Mode"
      value_template: >-
        {% if is_state('sensor.solax_run_mode', '0') %}
          Waiting
        {% elif is_state('sensor.solax_run_mode', '1') %}
          Checking
        {% elif is_state('sensor.solax_run_mode', '2') %}
          Normal Mode
        {% elif is_state('sensor.solax_run_mode', '3') %}
          Off Mode
        {% elif is_state('sensor.solax_run_mode', '7') %}
          EPS Mode
        {% elif is_state('sensor.solax_run_mode', '9') %}
          Idle Mode
        {% else %}
          Unknown
        {% endif %}
    
# Backup mode will prioritise charging battery before export and prevent battery discharge.
#
# ForceTime mode will gridcharge the battery.
      
input_boolean:
  solax_backup:
    name: SolaX Backup Mode
    initial: off
  solax_forcetime:
    name: SolaX Force Time
    initial: off

input_number:
  solax_battery_charge:
    name: SolaX Battery Charge A
    initial: 20
    min: 0
    max: 25 # Technical Datasheet states Max Charge is 30A, but recommend 25A
    step: 1

  solax_battery_discharge:
    name: SolaX Battery Disharge A
    initial: 20
    min: 0
    max: 25 # Technical Datasheet states Max Discharge is 30A, but recommend 25A
    step: 1

  solax_battery_min_energy:
    name: "SolaX Battery Min Energy Level %"
    initial: 25
    min: 10 # Technical Datasheet states Max DOD is 90%
    max: 70
    step: 5

# If address as per page 44 of https://www.solaxpower.com/wp-content/uploads/2018/10/X1-AC-user-manual.pdf
# is different to 1 change all the below " unit: '1' " to the corresponding number.

automation:
  - alias: House Battery Charge Rate
    trigger:
      platform: state
      entity_id: input_number.solax_battery_charge
    action:
    - service: modbus.write_register # Battery Charge
      data_template:
        hub: SolaX
        unit: '1'
        address: '36'
        value: "{{ (trigger.to_state.state | float * 10) | int }}"
    - delay: '00:00:01'
    - service: modbus.write_register # Repeast Battery Charge incase Inverter missed first
      data_template:
        hub: SolaX
        unit: '1'
        address: '36'
        value: "{{ (trigger.to_state.state | float * 10) | int }}"

  - alias: House Battery Disharge Rate
    trigger:
      platform: state
      entity_id: input_number.solax_battery_discharge
    action:
    - service: modbus.write_register # Battery Discharge
      data_template:
        hub: SolaX
        unit: '1'
        address: '37'
        value: "{{ (trigger.to_state.state | float * 10) | int }}"
    - delay: '00:00:01'
    - service: modbus.write_register # Repeat Battery Discharge incase Inverter missed first
      data_template:
        hub: SolaX
        unit: '1'
        address: '37'
        value: "{{ (trigger.to_state.state | float * 10) | int }}"

  - alias: "House Battery Min Energy %"
    trigger:
      platform: state
      entity_id: input_number.solax_battery_min_energy
    action:
    - service: modbus.write_register # Min Discharge %
      data_template:
        hub: SolaX
        unit: '1'
        address: '32'
        value: "{{ trigger.to_state.state | int }}"
    - delay: '00:00:01'
    - service: modbus.write_register # Min Discharge %
      data_template:
        hub: SolaX
        unit: '1'
        address: '32'
        value: "{{ trigger.to_state.state | int }}"
    
  - alias: Solax Backup
    trigger:
      platform: state
      entity_id: input_boolean.solax_backup
      to: 'on'
    action:
    - service: modbus.write_register # Backup mode
      data_template:
        hub: SolaX
        unit: '1'
        address: '31'
        value: '2'

  - alias: Solax Backup Off
    trigger:
      platform: state
      entity_id: input_boolean.solax_backup
      to: 'off'
    action:
    - service: modbus.write_register # Auto Mode
      data_template:
        hub: SolaX
        unit: '1'
        address: '31'
        value: '0'

  - alias: Solax ForceTime
    trigger:
      platform: state
      entity_id: input_boolean.solax_forcetime
      to: 'on'
    action:
    - service: modbus.write_register # Force Time Mode
      data_template:
        hub: SolaX
        unit: '1'
        address: '31'
        value: '1'
    - delay: '00:00:01'
    - service: modbus.write_register # 2nd Force Time Mode incase Inverter missed first
      data_template:
        hub: SolaX
        unit: '1'
        address: '31'
        value: '1'

  - alias: Solax ForceTime Off
    trigger:
      platform: state
      entity_id: input_boolean.solax_forcetime
      to: 'off'
    action:
    - service: modbus.write_register # Auto Mode
      data_template:
        hub: SolaX
        unit: '1'
        address: '31'
        value: '0'
    - delay: '00:00:01'
    - service: modbus.write_register # 2nd Auto Mode incase Inverter missed first
      data_template:
        hub: SolaX
        unit: '1'
        address: '31'
        value: '0'